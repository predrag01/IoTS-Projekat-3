        if "AirTemperature" in data:
            if data["AirTemperature"] > 30:
                data["EventType"] = "HighTemperatureAlarm"

                json_data = json.dumps(data)

                measurement_id = data["MeasurementId"]
                client.publish(analytics + "/" + str(measurement_id), payload=json_data, qos=1)

            elif data["AirTemperature"] < 10:
                data["EventType"] = "LowTemperatureAlarm"

                json_data = json.dumps(data)

                measurement_id = data["MeasurementId"]
                client.publish(analytics + "/" + str(measurement_id), payload=json_data, qos=1)
				
				
				
				
				
				
				temperature = data.get("AirTemperature")

        if temperature is not None:
            temperature_readings.append(temperature)

        current_time = time.time()
        if current_time - last_publish_time >= 10:
            if temperature_readings:
                average_temp = sum(temperature_readings) / len(temperature_readings)
                print("Average air temperature in 10s:", average_temp)
                publish_average_temp(average_temp)
                #asyncio.create_task(publish_average_temp(average_temp))
                temperature_readings.clear()
                last_publish_time = current_time